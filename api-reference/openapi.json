{
  "openapi": "3.0.0",
  "info": {
    "title": "Meetstream Bot API",
    "version": "1.0.0",
    "description": "API documentation for managing Meetstream bots. All endpoints require API Key authentication."
  },
  "servers": [
    {
      "url": "https://api.meestream.ai/v1",
      "description": "Meestream.ai API base URL"
    }
  ],
  "tags": [
    {
      "name": "Bot Endpoints",
      "description": "Endpoints for managing Meetstream bots."
    },
    {
      "name": "Calendar Endpoints",
      "description": "Endpoints for managing calendar integrations."
    }
  ],
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "All API endpoints are authenticated using API Keys. The key should be included in the 'Authorization' header, prefixed with 'Token '. Example: 'Authorization: Token YOUR_API_KEY'."
      }
    },
    "schemas": {
      "CreateBotRequest": {
        "type": "object",
        "properties": {
          "meeting_link": { "type": "string", "description": "Meeting URL to join." },
          "audio_required": { "type": "boolean", "description": "Whether audio is required." },
          "video_required": { "type": "boolean", "description": "Whether video is required." },
          "bot_message": { "type": "string", "description": "Message for the bot to say on join." },
          "live_audio_required": { "type": "object", "description": "Live audio streaming config." },
          "live_transcription_required": { "type": "object", "description": "Live transcription config." },
          "transcription": {
            "type": "object",
            "properties": {
              "deepgram": {
                "type": "object",
                "properties": {
                  "model": { "type": "string" },
                  "language": { "type": "string" }
                }
              }
            }
          },
          "custom_attributes": {
            "type": "object",
            "properties": {
              "tag": { "type": "string" },
              "sample": { "type": "string" }
            }
          },
          "callback_url": { "type": "string", "description": "Callback URL for bot events." }
        },
        "required": ["meeting_link", "audio_required", "video_required"]
      },
      "CreateBotResponse": {
        "type": "object",
        "properties": {
          "bot_id": { "type": "string", "description": "Unique identifier for the created bot." }
        },
        "required": ["bot_id"]
      },
      "GetBotStatusResponse": {
        "type": "object",
        "properties": {
          "status": { "type": "string", "description": "Current status of the bot." },
          "message": { "type": "string", "description": "Status message." }
        },
        "required": ["status", "message"]
      },
      "GetBotTranscriptResponse": {
        "type": "object",
        "properties": {
          "transcript": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "speaker": { "type": "string" },
                "timestamp": { "type": "string" },
                "text": { "type": "string" }
              }
            }
          },
          "summary": { "type": "string" }
        }
      },
      "RemoveBotResponse": {
        "type": "object",
        "properties": {
          "success": { "type": "boolean" },
          "message": { "type": "string" }
        },
        "required": ["success", "message"]
      },
      "GetTranscriptResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "speaker": { "type": "string" },
            "transcript": { "type": "string" },
            "start_time": { "type": "number" },
            "end_time": { "type": "number" },
            "words": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "word": { "type": "string" },
                  "start": { "type": "number" },
                  "end": { "type": "number" },
                  "confidence": { "type": "number" },
                  "speaker": { "type": "string" },
                  "punctuated_word": { "type": "string" },
                  "speech_confidence": { "type": "number" }
                }
              }
            },
            "speaker_confidence": { "type": "number" }
          }
        }
      },
      "GetBotSpeakerTimelineResponse": {
        "type": "object",
        "description": "Speaker timeline information for a bot."
      },
      "CreateCalendarRequest": {
        "type": "object",
        "required": ["google_client_id", "google_client_secret", "google_refresh_token"],
        "properties": {
          "google_client_id": {
            "type": "string",
            "description": "Google OAuth client ID for calendar access"
          },
          "google_client_secret": {
            "type": "string",
            "description": "Google OAuth client secret for calendar access"
          },
          "google_refresh_token": {
            "type": "string",
            "description": "Google OAuth refresh token for maintaining calendar access"
          }
        }
      },
      "CreateCalendarResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Success message"
          },
          "events_fetched": {
            "type": "integer",
            "description": "Number of events fetched"
          },
          "calendars_processed": {
            "type": "integer",
            "description": "Number of calendars processed"
          },
          "user_email": {
            "type": "string",
            "description": "Email of the user"
          }
        },
        "required": ["message", "events_fetched", "calendars_processed", "user_email"]
      },
      "GetBotChatsResponse": {
        "type": "object",
        "properties": {
          "download_url": {
            "type": "string",
            "description": "URL to download the chats file"
          },
          "expires_in": {
            "type": "integer",
            "description": "Time in seconds until the download URL expires"
          },
          "file_type": {
            "type": "string",
            "description": "Type of the file containing the chats"
          }
        },
        "required": ["download_url", "expires_in", "file_type"]
      },
      "GetBotScreenshotsResponse": {
        "type": "object",
        "properties": {
          "bot_id": {
            "type": "string",
            "description": "The unique identifier of the bot"
          },
          "screenshots_count": {
            "type": "integer",
            "description": "Number of screenshots available"
          },
          "screenshots": {
            "type": "array",
            "description": "List of screenshot URLs or objects",
            "items": {
              "type": "string"
            }
          } 
        },
        "required": ["bot_id", "screenshots_count", "screenshots"]
      }
    }
  },
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "paths": {
    "/bots/create_bot": {
      "post": {
        "tags": ["Bot Endpoints"],
        "summary": "Create bot",
        "operationId": "createBot",
        "description": "Creates a new bot instance to join a meeting.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateBotRequest" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Bot creation initiated successfully.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CreateBotResponse" }
              }
            }
          },
          "400": { "description": "Bad Request (e.g., missing fields, invalid meeting link)." },
          "401": { "description": "Unauthorized (Invalid API Key)." },
          "500": { "description": "Internal Server Error." }
        }
      }
    },
    "/bots/{bot_id}/status": {
      "get": {
        "tags": ["Bot Endpoints"],
        "summary": "Get Bot Status",
        "operationId": "getBotStatus",
        "description": "Retrieves the current status of a specific bot.",
        "parameters": [
          {
            "name": "bot_id",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the bot.",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the bot status.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetBotStatusResponse" }
              }
            }
          },
          "401": { "description": "Unauthorized (Invalid API Key)." },
          "404": { "description": "Bot not found." },
          "500": { "description": "Internal Server Error." }
        }
      }
    },
    "/bots/{bot_id}/get_audio": {
      "get": {
        "tags": ["Bot Endpoints"],
        "summary": "Get Bot Audio",
        "operationId": "getBotAudio",
        "description": "Retrieves the recorded audio file for a specific bot, if available.",
        "parameters": [
          {
            "name": "bot_id",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the bot.",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the audio file directly (e.g., Content-Type: audio/mpeg). The filename is typically the bot_id.",
            "content": {
              "audio/mpeg": {
                "schema": { "type": "string", "format": "binary" }
              }
            }
          },
          "401": { "description": "Unauthorized (Invalid API Key)." },
          "404": { "description": "Bot not found or audio not available/ready." },
          "500": { "description": "Internal Server Error." }
        }
      }
    },
    "/bots/{bot_id}/get_transcript": {
      "get": {
        "tags": ["Bot Endpoints"],
        "summary": "Get Bot Transcript",
        "operationId": "getBotTranscript",
        "description": "Retrieves the transcript file for a specific bot, if available.",
        "parameters": [
          {
            "name": "bot_id",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the bot.",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the transcript file (typically JSON).",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetBotTranscriptResponse" }
              }
            }
          },
          "401": { "description": "Unauthorized (Invalid API Key)." },
          "404": { "description": "Bot not found or transcript not available/ready." },
          "500": { "description": "Internal Server Error." }
        }
      }
    },
    "/bots/{bot_id}/remove_bot": {
      "get": {
        "tags": ["Bot Endpoints"],
        "summary": "Remove bot",
        "operationId": "removeBot",
        "description": "Removes a bot from its meeting and deletes its associated data.",
        "parameters": [
          {
            "name": "bot_id",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the bot.",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Bot removed successfully.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/RemoveBotResponse" }
              }
            }
          },
          "401": { "description": "Unauthorized (Invalid API Key)." },
          "404": { "description": "Bot not found." },
          "500": { "description": "Internal Server Error." }
        }
      }
    },
    "/transcript/{transcript_id}/get_transcript": {
      "get": {
        "tags": ["Bot Endpoints"],
        "summary": "Get Transcript",
        "operationId": "getTranscript",
        "description": "Retrieves the detailed transcript for a specific meeting, including speaker information and word-level details.",
        "parameters": [
          {
            "name": "transcript_id",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the transcript.",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the detailed transcript with speaker information and word-level details.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetTranscriptResponse" }
              }
            }
          },
          "401": { "description": "Unauthorized (Invalid API Key)." },
          "404": { "description": "Transcript not found." },
          "500": { "description": "Internal Server Error." }
        }
      }
    },
    "/bots/{bot_id}/get_speaker_timeline": {
      "get": {
        "tags": ["Bot Endpoints"],
        "summary": "Get Bot Speaker Timeline",
        "operationId": "getBotSpeakerTimeline",
        "description": "Retrieves the speaker timeline information for a specific bot.",
        "parameters": [
          {
            "name": "bot_id",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the bot.",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the bot speaker timeline information.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetBotSpeakerTimelineResponse" }
              }
            }
          },
          "401": { "description": "Unauthorized (Invalid API Key)." },
          "404": { "description": "Bot not found." },
          "500": { "description": "Internal Server Error." }
        }
      }
    },
    "/calendar/create_calendar": {
      "post": {
        "tags": ["Calendar Endpoints"],
        "summary": "Create Calendar",
        "operationId": "createCalendar",
        "description": "Creates a new calendar configuration with Google Calendar integration",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateCalendarRequest" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Calendar created successfully and events fetched.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CreateCalendarResponse" }
              }
            }
          },
          "400": { "description": "Bad Request (e.g., missing required fields, invalid credentials)." },
          "401": { "description": "Unauthorized (Invalid API Key)." },
          "500": { "description": "Internal Server Error." }
        }
      }
    },
    "/bots/{bot_id}/get_chats":{
      "get": {
        "tags": ["Bot Endpoints"],
        "summary": "Get Bot Chats",
        "operationId": "getBotChats",
        "description": "Retrieves the chats for a specific bot.",
        "parameters": [
          {
            "name": "bot_id",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the bot.",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the chats for the bot.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetBotChatsResponse" }
              }
            }
          }
        }
      }
     
    },
    "/bots/{bot_id}/get_screenshots": {
      "get": {
        "tags": ["Bot Endpoints"],
        "summary": "Get Bot Screenshots",
        "operationId": "getBotScreenshots",
        "description": "Retrieves the screenshots for a specific bot.",
        "parameters": [
          {
            "name": "bot_id",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the bot.",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the screenshots for the bot.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetBotScreenshotsResponse" }
              }
            }
          }
        }
      }
    }
  }
}